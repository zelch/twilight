///////////////////////////////////////////////
// Menu Manager Source File
///////////////////////
// This file belongs to dpmod/darkplaces
// AK contains all manager constants, etc.
////////////////////////////////
// constants

const float MENU_NORMAL = 0;
const float MENU_INGAME = 1;

// define these menus in the menu def files or dont
// if not defined there will be added default items
const string MENU_NORMAL_NAME = "normal";
const string MENU_INGAME_NAME = "ingame";

const string MENU_NORMAL_DEFAULT = 
"// default normal menu\n"
"{\n"
"	\"classname\" 	\"ITEM_MENU\"\n"
"	\"name\"		\"normal\"\n"
"}";

const string MENU_INGAME_DEFAULT = 
"// default ingame menu\n"
"{\n"
"	\"classname\" 	\"ITEM_MENU\"\n"
"	\"name\"		\"ingame\"\n"
"}";

const string MENU_FILENAME_LIST = "";

const float MENU_ALLOWINGAME = FALSE;

// globals 

entity menu_activemenu; 

// points to the lowest selected menu item (that has no child item selected)
entity menu_selected;

// used to build up the local coord system
vector menu_localorigin;

vector menu_clip_pos, menu_clip_size; // global clip area

///////////
// fields
///

// managing stuff
.entity parent;			// used by ITEM_MENU for the history function
.string parent_name;	// not used by ITEM_MENU

.string name;

.entity next, prev;		// point to the next, respectively, the previous item

.entity child;			// points to the first child

// updating stuff
.vector click_pos, click_size;

.float orderpos;	// if FLAG_NOSELECT or FLAG_HIDDEN is set, it cant be selected
					// has to be set always to a correct value or to 0 then it is set
.float flags;		

// drawing
// the clip_* are only used by menu's (at the moment)
.vector clip_pos, clip_size; // set clip_size_x or clip_size_y to 0 to disable clipping 

.vector local_origin;

// function pointers
.void(void) init;
.void(void) mouse_enter;
.void(void) mouse_leave;
.void(void) action;
.void(void) draw;
.float(float keynr, float ascii) key; // if it returns TRUE, the key was processed by the function

// hidden function pointers - actually these are called by the manager
// and they call the normal ones (used to make controls more generic
.void(void) _init;
.void(void) _mouse_enter;
.void(void) _mouse_leave;
.void(void) _action;
.void(void) _draw;
.void(float keynr, float ascii) _key;

///////////////
// prototypes
///

// used for global managing
void(void) menu_init;
// used to reset the menu states everytime the menu is activated
void(void) menu_toggle;

// these 2 functions are pretty private, so dont call them !
void(string file) menu_loadmenu;
void(void) menu_linkmenus;

void(void) menu_frame;
void(void) menu_draw;
void(float keynr, float ascii) menu_keydown;
void(void) menu_shutdown;

// used for menu handling
void(void) menu_selectnext;
void(void) menu_selectprev;
void(void) menu_selectup;
void(void) menu_selectdown;

void(entity menu) menu_jumptomenu;
void(entity menu) menu_drawmenu;

void(entity par) menu_processmouse;

float(entity e) menu_hasevents;
float(entity e) menu_isvisible;
float(entity e) menu_selectable;


